#!/usr/bin/expect -f


# -------------------------------------------
# Création du dossier log si il n'existe pas.
# -------------------------------------------

file mkdir ./tests/log

# -------------------
# Création du timeout
# -------------------
set timeout 1
expect_after timeout { send_user "\nErreur : Échec des tests, temps dépassé !\n" ; exit 1 }

# =============================
# Test sur le menu de l'agenda.
# =============================

proc menu {input} {
  expect {
    "Bienvenue dans l'agenda TestMenu.\n"   
    "1. Modifier l'agenda\n"
    "2. Afficher l'agenda\n"
    "3. Créer un évènement.\n"
    "4. Supprimer un évènement.\n"
    "5. Exporter au format HTML\n"
    "6. Enregistrer l'agenda\n"
    "7. Quitter\n"
    "> " { send "$input\n" }
  }
}

log_file -noappend ./tests/log/test_menu.log

send_user "=============================\n
Test sur le menu de l'agenda.\n
=============================\n"

spawn ./agenda

expect {
  "Bienvenue, que souhaitez-vous faire ?\n"
  "1. Crée un nouvel agenda.\n"
  "2. Charger un agenda.\n"
  "3. Quitter.\n"
  "> " { send "1\n" }
}

expect -re "Saisissez.* titre.*" 
send "TestMenu\n"

expect -re "description.* point.*" 
send "Description\nQui fait plusieurs lignes\nPour des tests.\r.\n"

menu 2

# Affichage de l'agenda.

menu 6

# expect -re "L'agenda a été enregistré dans le fichier.* TestMenu.*"

menu 1

expect -re "Saisissez.* titre.*" 
send "NouveauTestMenu\n"

expect -re "description.* point.*" 
send "NouvelleDescription\nQui fait plusieurs lignes\nPour des tests.\r.\n"

menu 2

# Affichage de l'agenda.

menu 5

# Exportation de l'agenda au format HTML.

menu 7

expect -re "L'agenda a été modifié ! L'enregistrer ?.*1\\. Oui.*2\\. Non.*"
send "2\n"

expect eof
send_user "Test du menu réussit avec succès !\n"